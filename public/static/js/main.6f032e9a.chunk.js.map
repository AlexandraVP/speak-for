{"version":3,"sources":["chat/message-container/message-container.js","chat/message-form/message-form.js","chat/chat-header/chat-header.js","chat/chat.js","auth-form/auth-form.js","registration-form/registration-form.js","App.js","index.js"],"names":["MessageContainer","containerRef","React","createRef","scrollHeight","getOldMessages","current","scrollTop","props","prevProps","containerElement","this","messages","index","offsetHeight","me","localStorage","getItem","ref","className","onWheel","map","message","i","key","author","text","Component","MessageForm","state","sendMessage","event","nativeEvent","preventDefault","trim","length","setState","updateMessage","target","value","keyUpHandler","keyCode","shiftKey","document","addEventListener","removeEventListener","onSubmit","onChange","maxLength","type","ChatHeader","logout","fetch","method","headers","then","removeItem","onClick","Chat","appendMessages","newMessages","unshiftMessages","oldMessages","a","oldMessagesRequestPending","until","date","response","json","data","setTimeout","updateMessages","since","timeout","body","JSON","stringify","init","clearTimeout","AuthForm","username","authError","password","login","toLowerCase","updateUsername","updatePassword","placeholder","name","switchForm","RegistrationForm","repeatPassword","error","register","status","updateRepeatPassword","App","isAuthorised","needRegistration","token","setItem","toggleSingForm","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f032e9a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './message-container.css';\n\nexport class MessageContainer extends Component {\n\n    containerRef = React.createRef();\n\n    scrollHeight = null;\n\n    componentDidUpdate(prevProps){\n        const containerElement = this.containerRef.current;\n        if (prevProps.messages[0] && prevProps.messages[0].index > this.props.messages[0].index){\n            containerElement.scrollTop = containerElement.scrollHeight - this.scrollHeight;\n        }else if(this.scrollHeight === null || this.scrollHeight - containerElement.offsetHeight - containerElement.scrollTop < 50){\n            containerElement.scrollTop = containerElement.scrollHeight;\n        }\n        this.scrollHeight = containerElement.scrollHeight;\n    }\n\n    getOldMessages = () => {\n        const containerElement = this.containerRef.current;\n        if(containerElement.scrollTop === 0){\n            this.props.getOldMessages();\n        }\n    };\n\n    render(){\n        const me = localStorage.getItem('username');\n        return (\n            <div ref={this.containerRef} className=\"messagesContainer\" onWheel={this.getOldMessages}>\n                {this.props.messages.map((message, i) => (\n                    <div key={i} className={me === message.author ? 'right' : ''}>\n                        <div className='message-group'>\n                            <span className='author'>{message.author}</span>\n                            <p className='message'>{message.text}</p>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport './message-form.css';\n\nexport class MessageForm extends Component {\n\n    state = {\n        message: ''\n    };\n\n    sendMessage = (event) => {\n        if(event.nativeEvent){\n            event.nativeEvent.preventDefault();\n        }\n        if(this.state.message.trim().length === 0){\n            return;\n        }\n        this.props.sendMessage(this.state.message);\n        this.setState({message: ''});\n    };\n\n    updateMessage = (event) => {\n        this.setState({message: event.target.value});\n    };\n\n    keyUpHandler = (event) => {\n        if (event.keyCode === 13 && event.shiftKey){\n            this.sendMessage(event);\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('keyup', this.keyUpHandler);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keyup', this.keyUpHandler);\n    }\n\n    render(){\n        return (\n            <form className=\"messageForm\" onSubmit={this.sendMessage}>\n                <textarea className=\"messageInput\" onChange={this.updateMessage} value={this.state.message}\n                maxLength='450'/>\n                <input className=\"sendButton\" type=\"submit\" value=\"\"/>\n            </form>\n        );\n    }\n\n}\n","import React, {Component} from 'react';\nimport './chat-header.css';\n\nexport class ChatHeader extends Component {\n\n    logout = () => {\n      fetch('/users/logout', {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json;charset=utf-8',\n              'X-Auth-Token': localStorage.getItem('x-auth-token')\n          }\n      }).then(() => {\n          localStorage.removeItem('x-auth-token');\n          localStorage.removeItem('username');\n          this.props.logout();\n      });\n    };\n\n    render(){\n        return (\n            <div className=\"header\">\n                <div className='title-name'>MEOW chat</div>\n                <div className='logout' onClick={this.logout}>Logout</div>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport './chat.css';\nimport {MessageContainer} from './message-container/message-container';\nimport {MessageForm} from './message-form/message-form';\nimport {ChatHeader} from './chat-header/chat-header';\n\nexport class Chat extends Component {\n\n    state = {\n        messages: [],\n    };\n\n    appendMessages = (newMessages) => {\n        this.setState({\n            messages: [...this.state.messages, ...newMessages],\n        });\n    };\n\n    unshiftMessages = (oldMessages) => {\n        this.setState({\n            messages: [...oldMessages, ...this.state.messages],\n        });\n    };\n\n    getOldMessages = async () => {\n        const {messages} = this.state;\n        if (messages.length < 20 || this.oldMessagesRequestPending) {\n            return;\n        }\n        this.oldMessagesRequestPending = true;\n        const until = messages[0].date;\n        const response = await fetch(`/messages/before?until=${until}&count=20`, {\n            headers: {\n                'X-Auth-Token': localStorage.getItem('x-auth-token'),\n            },\n        });\n        const data = await response.json();\n        if (data.length) {\n            this.unshiftMessages(data);\n        }\n        setTimeout(() => {\n            this.oldMessagesRequestPending = false;\n        }, 500)\n    };\n\n    updateMessages = async () => {\n        const {messages} = this.state;\n        const since = messages[messages.length - 1].date;\n        const response = await fetch(`/messages/after?since=${since}`, {\n            headers: {\n                'X-Auth-Token': localStorage.getItem('x-auth-token'),\n            },\n        });\n        const data = await response.json();\n        if (data.length) {\n            this.appendMessages(data);\n        }\n        this.timeout = setTimeout(this.updateMessages, 500);\n    };\n\n    sendMessage = (text) => {\n        fetch('/messages', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n                'X-Auth-Token': localStorage.getItem('x-auth-token'),\n            },\n            body: JSON.stringify({text: text}),\n        })\n    };\n\n    init = async () => {\n        const response = await fetch('/messages/new?count=20', {\n            headers: {\n                'X-Auth-Token': localStorage.getItem('x-auth-token'),\n            },\n        });\n        const messages = await response.json();\n        this.setState({messages});\n        this.timeout = setTimeout(this.updateMessages, 500);\n    };\n\n    componentDidMount() {\n        this.init();\n    }\n\n\n    componentWillUnmount() {\n        clearTimeout(this.timeout);\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <ChatHeader logout={this.props.logout}/>\n                <div className=\"main\">\n                    <div className=\"addInfo\"/>\n                    <div className=\"chat\">\n                        <MessageContainer messages={this.state.messages} getOldMessages={this.getOldMessages}/>\n                        <MessageForm sendMessage={this.sendMessage}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport './auth-form.css';\n\nexport class AuthForm extends Component {\n\n    state = {\n        username: '',\n        authError: false,\n        password: ''\n    };\n\n    login = async (event) => {\n        event.nativeEvent.preventDefault();\n        const username = this.state.username\n            .toLowerCase()\n            .trim();\n        const password = this.state.password;\n        if(!username){\n            return;\n        }\n        this.props.login(username, password);\n    };\n\n    updateUsername = (event) => {\n        this.setState({username: event.target.value, authError: false});\n    };\n\n    updatePassword = (event) => {\n        this.setState({password: event.target.value, authError: false});\n    };\n\n    render() {\n        return (\n            <form className='form' onSubmit={this.login}>\n                <h2 className='title'>Welcome</h2>\n                <div className='logo'/>\n                <input className='input' type='text'\n                       placeholder='Username' onChange={this.updateUsername} value={this.state.username}/>\n                {\n                    !!this.state.authError && (\n                        <div className='error-container'>\n                            <span className='error'>username is taken</span>\n                        </div>\n                    )\n                }\n                <input className='password' type='password' name='password'  placeholder='Password'\n                       onChange={this.updatePassword} value={this.state.password}/>\n                <input className='submit' type='submit' value='LOGIN'/>\n\n                <div className='sign-form'>\n                <span className='not-account'>Don't have an account? </span>\n                <span className='sign' onClick={this.props.switchForm}>Sign up</span>\n                <span className='footer'>🐾</span>\n                </div>\n            </form>\n        );\n    }\n}","import React, {Component} from 'react';\nimport './registration-form.css';\n\nexport class RegistrationForm extends Component {\n\n    state = {\n        username: '',\n        password: '',\n        repeatPassword: '',\n        error: '',\n    };\n\n    register = async () => {\n        const username = this.state.username.trim().toLowerCase();\n        if (!username) {\n            this.setState({\n                error: 'Enter Username',\n            });\n        } else if (!this.state.password) {\n            this.setState({\n                error: 'Enter Password',\n            });\n        } else if (this.state.password !== this.state.repeatPassword) {\n            this.setState({\n                error: 'Passwords don`t match',\n            });\n        } else {\n            const response = await fetch('users/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8',\n                },\n                body: JSON.stringify({username, password: this.state.password}),\n            });\n            if (response.status > 400) {\n                this.setState({error: response.status})\n            } else {\n                const username = this.state.username\n                    .toLowerCase()\n                    .trim();\n                const password = this.state.password;\n                this.props.login(username,this.state.password);\n            }\n        }\n    };\n\n\n    updateUsername = (event) => {\n        const username = event.target.value;\n        this.setState({\n            username,\n            error: '',\n        })\n    };\n\n    updatePassword = (event) => {\n        const password = event.target.value;\n        this.setState({\n            password,\n            error: '',\n        })\n    };\n\n    updateRepeatPassword = (event) => {\n        const repeatPassword = event.target.value;\n        this.setState({\n            repeatPassword,\n            error: '',\n        })\n    };\n\n    render() {\n        return (\n\n\n            <form className='register-form'>\n\n                <h2 className='title'>Sign up</h2>\n                <div className='logo'/>\n\n                <input className='register-input' type='text'\n                       placeholder='Username'\n                       value={this.state.username}\n                       onChange={this.updateUsername}/>\n                <input className='register-password' type='password'\n                       placeholder='Password'\n                       value={this.state.password}\n                       onChange={this.updatePassword}/>\n                <input className='repeat-password' type='password'\n                       placeholder='Confirm Password'\n                       value={this.state.repeatPassword}\n                       onChange={this.updateRepeatPassword}/>\n                {\n                    !!this.state.error && (\n                        <div className='error-container'>\n                            <span className='error'>{this.state.error}</span>\n                        </div>\n                    )\n                }\n\n                <div className='get-start' onClick={this.register}>\n                    <span>Get started</span>\n                </div>\n\n                <div className='have-account'>\n                    <span className='already-have'>Already have an accout?</span>\n                    <span className='log-in' onClick={this.props.switchForm}> Log in</span>\n                </div>\n\n            </form>\n        );\n    }\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {Chat} from './chat/chat';\nimport {AuthForm} from './auth-form/auth-form';\nimport {RegistrationForm} from './registration-form/registration-form';\n\nclass App extends Component {\n\n    state = {\n        isAuthorised: !!localStorage.getItem('x-auth-token'),\n        needRegistration: false,\n    };\n\n    login = async (username, password) => {\n        const response = await fetch('/users/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify({username: username, password})\n        });\n        if(response.status === 403){\n            this.setState({authError: true});\n        }\n        const data = await response.json();\n        const token = data.token;\n        localStorage.setItem('username', username);\n        localStorage.setItem('x-auth-token', token);\n        this.setState({isAuthorised: true});\n    };\n\n    logout = () => {\n        this.setState({isAuthorised: false});\n    };\n\n    toggleSingForm = () => {\n        this.setState({needRegistration: !this.state.needRegistration});\n    };\n\n\n    render() {\n        return (\n            <div className=\"layout\">\n                {\n                    this.state.isAuthorised\n                        ? <Chat logout={this.logout}/>\n                        : (\n                            this.state.needRegistration\n                            ? <AuthForm login={this.login} switchForm={this.toggleSingForm}/>\n                            : <RegistrationForm switchForm={this.toggleSingForm} login={this.login}/>\n                        )\n                }\n            </div>\n\n        );\n    }\n\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}